@mixin styleText($color, $fs, $fw){
    color: $color;
    font-size: $fs;
    font-weight: $fw;
}
@mixin styleButton($color, $bg-color, $border, $fs, $fw, $pd-Y, $pd-X){
    color: $color;
    background-color: $bg-color;
    border: 1px solid $border;
    font-size: $fs;
    font-weight: $fw;
    padding: $pd-Y $pd-X;
}

@mixin styleFormSearch($bg-color, $bg-color-focus, $border-color){
    .input-group{
        background-color: $bg-color;
        .form-control{
            background-color: transparent;
            border-color: transparent;
            box-shadow: none;
            transition: all .5s;
            &::placeholder{
                color: $color-black-light;
            }
            &:focus{
                background-color: $bg-color-focus;
                border-top-color: $border-color;
                border-bottom-color: $border-color;
                border-left-color: $border-color;
            }
            &:focus + .input-group-append{
                .input-group-text{
                    background-color: $bg-color-focus;
                    border-top-color: $border-color;
                    border-bottom-color: $border-color;
                    border-right-color: $border-color;
                }
            }
        }
        .input-group-append{
            .input-group-text{
                background-color: transparent;
                border-color: transparent;
                color: $color-red-0;
                transition: all .5s;
                &:hover{
                    background-color: $color-red-0;
                    color: $color-white-0;
                }
            }
        }
    }
}
@mixin responsive($screen){
    @if map-has-key($map:$breakpoints , $key: $screen){
        $value: map-get($map:$breakpoints , $key: $screen);
        @media screen and (max-width:$value){
            @content;
        }
    }
    @else{
        @warn "`{$screen} is not available`";
    }
}